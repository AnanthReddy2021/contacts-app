{"ast":null,"code":"import _objectSpread from\"C:/OFFICE/Ananth/GIT/contacts-app/contacts-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:/OFFICE/Ananth/GIT/contacts-app/contacts-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";var initialContact={\"ID\":\"\",\"FirstName\":\"\",\"LastName\":\"\",\"Mobile\":\"\",\"EmailID\":\"\",\"Password\":\"\"};var initialState={contacts:[],contact:initialContact,isLogin:false};var ContactReducer=function ContactReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var actions=arguments.length>1?arguments[1]:undefined;switch(actions.type){case\"ADD_CONTACT\":{var arr=_toConsumableArray(state.contacts);var max=arr.length===0?0:Math.max.apply(null,arr.map(function(item){return item.ID;}));console.log(max);var res=_objectSpread({},actions.data);res[\"ID\"]=max+1;arr.push(res);return _objectSpread(_objectSpread({},state),{},{contacts:arr,contact:initialContact});}case\"UPDATE_CONTACT\":{var index=state.contacts.findIndex(function(item){return item.ID===actions.data.ID;});var _arr=_toConsumableArray(state.contacts);_arr[index]=actions.data;return _objectSpread(_objectSpread({},state),{},{contacts:_arr,contact:initialContact});}case\"EDIT_CONTACT\":{return _objectSpread(_objectSpread({},state),{},{contact:actions.data});}case\"REMOVE_CONTACT\":{var _arr2=state.contacts.filter(function(item){return item.ID!==actions.id;});return _objectSpread(_objectSpread({},state),{},{contacts:_arr2});}case\"LOGIN\":{console.log('Login Successfully !!');return _objectSpread(_objectSpread({},state),{},{isLogin:true});}case\"LOGOUT\":{console.log('Logout Success');return _objectSpread(_objectSpread({},state),{},{isLogin:false});}default:{return state;}}};export default ContactReducer;","map":{"version":3,"sources":["C:/OFFICE/Ananth/GIT/contacts-app/contacts-app/src/redux/ContactReducer.js"],"names":["initialContact","initialState","contacts","contact","isLogin","ContactReducer","state","actions","type","arr","max","length","Math","apply","map","item","ID","console","log","res","data","push","index","findIndex","filter","id"],"mappings":"iVAAA,GAAIA,CAAAA,cAAc,CAAC,CACf,KAAK,EADU,CAEf,YAAY,EAFG,CAGf,WAAW,EAHI,CAIf,SAAS,EAJM,CAKf,UAAU,EALK,CAMf,WAAW,EANI,CAAnB,CAQA,GAAMC,CAAAA,YAAY,CAAC,CACfC,QAAQ,CAAC,EADM,CAEfC,OAAO,CAACH,cAFO,CAGfI,OAAO,CAAC,KAHO,CAAnB,CAKA,GAAMC,CAAAA,cAAc,CAAC,QAAfA,CAAAA,cAAe,EAA8B,IAA7BC,CAAAA,KAA6B,2DAAvBL,YAAuB,IAAVM,CAAAA,OAAU,2CAC/C,OAAOA,OAAO,CAACC,IAAf,EACI,IAAK,aAAL,CAAmB,CACf,GAAMC,CAAAA,GAAG,oBAAKH,KAAK,CAACJ,QAAX,CAAT,CACA,GAAMQ,CAAAA,GAAG,CAAGD,GAAG,CAACE,MAAJ,GAAa,CAAb,CAAgB,CAAhB,CAAkBC,IAAI,CAACF,GAAL,CAASG,KAAT,CAAe,IAAf,CAAqBJ,GAAG,CAACK,GAAJ,CAAQ,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAT,EAAZ,CAArB,CAA9B,CACAC,OAAO,CAACC,GAAR,CAAYR,GAAZ,EACA,GAAMS,CAAAA,GAAG,kBAAKZ,OAAO,CAACa,IAAb,CAAT,CACAD,GAAG,CAAC,IAAD,CAAH,CAAUT,GAAG,CAAC,CAAd,CACAD,GAAG,CAACY,IAAJ,CAASF,GAAT,EACA,sCAAWb,KAAX,MAAiBJ,QAAQ,CAACO,GAA1B,CAA8BN,OAAO,CAACH,cAAtC,GAEH,CACD,IAAK,gBAAL,CAAsB,CAClB,GAAMsB,CAAAA,KAAK,CAAChB,KAAK,CAACJ,QAAN,CAAeqB,SAAf,CAAyB,SAAAR,IAAI,QAAEA,CAAAA,IAAI,CAACC,EAAL,GAAUT,OAAO,CAACa,IAAR,CAAaJ,EAAzB,EAA7B,CAAZ,CACA,GAAMP,CAAAA,IAAG,oBAAKH,KAAK,CAACJ,QAAX,CAAT,CACAO,IAAG,CAACa,KAAD,CAAH,CAAWf,OAAO,CAACa,IAAnB,CAEA,sCAAWd,KAAX,MAAiBJ,QAAQ,CAACO,IAA1B,CAA8BN,OAAO,CAACH,cAAtC,GAEH,CACD,IAAK,cAAL,CAAoB,CAChB,sCAAWM,KAAX,MAAiBH,OAAO,CAACI,OAAO,CAACa,IAAjC,GAEH,CACD,IAAK,gBAAL,CAAsB,CAClB,GAAMX,CAAAA,KAAG,CAACH,KAAK,CAACJ,QAAN,CAAesB,MAAf,CAAsB,SAAAT,IAAI,QAAEA,CAAAA,IAAI,CAACC,EAAL,GAAUT,OAAO,CAACkB,EAApB,EAA1B,CAAV,CACA,sCAAWnB,KAAX,MAAiBJ,QAAQ,CAACO,KAA1B,GAEH,CACD,IAAK,OAAL,CAAa,CACTQ,OAAO,CAACC,GAAR,CAAY,uBAAZ,EACA,sCAAWZ,KAAX,MAAiBF,OAAO,CAAC,IAAzB,GAEH,CACD,IAAK,QAAL,CAAc,CACVa,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACA,sCAAWZ,KAAX,MAAiBF,OAAO,CAAC,KAAzB,GAEH,CACD,QAAS,CACL,MAAOE,CAAAA,KAAP,CACH,CAxCL,CA0CH,CA3CD,CA6CA,cAAeD,CAAAA,cAAf","sourcesContent":["let initialContact={\r\n    \"ID\":\"\",\r\n    \"FirstName\":\"\",\r\n    \"LastName\":\"\",\r\n    \"Mobile\":\"\",\r\n    \"EmailID\":\"\",\r\n    \"Password\":\"\"\r\n}\r\nconst initialState={\r\n    contacts:[],\r\n    contact:initialContact,\r\n    isLogin:false\r\n}\r\nconst ContactReducer=(state=initialState,actions)=>{\r\n    switch(actions.type){\r\n        case \"ADD_CONTACT\":{\r\n            const arr=[...state.contacts]\r\n            const max = arr.length===0 ?0:Math.max.apply(null, arr.map(item => item.ID));\r\n            console.log(max)\r\n            const res={...actions.data}\r\n            res[\"ID\"]=max+1\r\n            arr.push(res)                        \r\n            return {...state,contacts:arr,contact:initialContact};\r\n\r\n        }\r\n        case \"UPDATE_CONTACT\":{\r\n            const index=state.contacts.findIndex(item=>item.ID===actions.data.ID);\r\n            const arr=[...state.contacts]\r\n            arr[index]=actions.data\r\n            \r\n            return {...state,contacts:arr,contact:initialContact};\r\n\r\n        }\r\n        case \"EDIT_CONTACT\":{\r\n            return {...state,contact:actions.data};\r\n\r\n        }\r\n        case \"REMOVE_CONTACT\":{\r\n            const arr=state.contacts.filter(item=>item.ID!==actions.id)\r\n            return {...state,contacts:arr};\r\n\r\n        }\r\n        case \"LOGIN\":{\r\n            console.log('Login Successfully !!')\r\n            return {...state,isLogin:true};\r\n\r\n        }\r\n        case \"LOGOUT\":{\r\n            console.log('Logout Success')\r\n            return {...state,isLogin:false};\r\n\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContactReducer;"]},"metadata":{},"sourceType":"module"}