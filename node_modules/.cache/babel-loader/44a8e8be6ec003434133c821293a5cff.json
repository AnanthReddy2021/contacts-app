{"ast":null,"code":"import _slicedToArray from\"C:/OFFICE/Ananth/GIT/contacts-app/contacts-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import ContactTable from'./ContactTable';import{AddContact as Add,UpdateContact}from'../redux/ContactActions';import{connect}from'react-redux';import AddContactModal from'./AddContactModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContactsList=function ContactsList(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var handleClose=function handleClose(){return setShow(false);};var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),input=_useState4[0],setInput=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),contactList=_useState6[0],setcontactList=_useState6[1];var handleSearch=function handleSearch(){if(input!==\"\"){var data=props.data.filter(function(item){var itemData=\"\".concat(item.ID,\"\\n                                  \").concat(item.FirstName.toUpperCase(),\" \\n                                  \").concat(item.LastName.toUpperCase(),\" \\n                                  \").concat(item.Mobile,\" \\n                                  \").concat(item.EmailID.toUpperCase());var textData=input.toUpperCase();return itemData.includes(textData);});setcontactList(data);}else{setcontactList(props.data);}};useEffect(function(){if(props.data!==undefined){setcontactList(props.data);}},[props]);var handleSubmit=function handleSubmit(data){setShow(false);if(data.ID===\"\"){props.handleSave(data);}else{props.handleUpdate(data);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row justify-content-center m-2\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Contacts List\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between m-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex flex-row col-sm-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control border border-secondary\",placeholder:\"Search\",value:input,onChange:function onChange(e){setInput(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){handleSearch();},className:\"btn btn-primary ml-2\",children:\"Search\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){setShow(true);},className:\"btn btn-primary\",children:\"Add Contact\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-12\",children:/*#__PURE__*/_jsx(ContactTable,{data:contactList})}),/*#__PURE__*/_jsx(AddContactModal,{title:\"Add Contact\",show:show,handleClose:handleClose,handleSubmit:handleSubmit})]});};var mapStateToProps=function mapStateToProps(state){return{data:state.contacts};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{handleSave:function handleSave(data){dispatch(Add(data));},handleUpdate:function handleUpdate(data){dispatch(UpdateContact(data));}};};export default connect(mapStateToProps,mapDispatchToProps)(ContactsList);","map":{"version":3,"sources":["C:/OFFICE/Ananth/GIT/contacts-app/contacts-app/src/Components/ContactList.js"],"names":["React","useState","useEffect","ContactTable","AddContact","Add","UpdateContact","connect","AddContactModal","ContactsList","props","show","setShow","handleClose","input","setInput","contactList","setcontactList","handleSearch","data","filter","item","itemData","ID","FirstName","toUpperCase","LastName","Mobile","EmailID","textData","includes","undefined","handleSubmit","handleSave","handleUpdate","e","target","value","mapStateToProps","state","contacts","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport ContactTable from './ContactTable';\r\nimport {AddContact as Add,UpdateContact} from '../redux/ContactActions'\r\nimport { connect } from 'react-redux';\r\nimport AddContactModal from './AddContactModal'\r\n\r\n\r\n\r\n\r\nconst ContactsList = (props) => {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const [input,setInput]=useState(\"\")\r\n    const [contactList,setcontactList]=useState([])\r\n\r\n\r\n    const handleSearch=()=>{\r\n        if(input!==\"\"){\r\n            const data=props.data.filter((item)=>{\r\n                const itemData = `${item.ID}\r\n                                  ${item.FirstName.toUpperCase()} \r\n                                  ${item.LastName.toUpperCase()} \r\n                                  ${item.Mobile} \r\n                                  ${item.EmailID.toUpperCase()}`;\r\n                                  \r\n                const textData = input.toUpperCase();    \r\n                return itemData.includes(textData);\r\n            })\r\n            setcontactList(data)\r\n        }else{\r\n            setcontactList(props.data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.data!==undefined){\r\n            setcontactList(props.data)\r\n        }\r\n    }, [props])\r\n    const handleSubmit = (data) => {\r\n        setShow(false)\r\n        if(data.ID===\"\"){\r\n            props.handleSave(data)\r\n        }else{\r\n            props.handleUpdate(data)\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center m-2\">\r\n                <h2>Contacts List</h2>\r\n            </div> \r\n            <div className=\"d-flex justify-content-between m-2\">\r\n                <div className=\"d-flex flex-row col-sm-4\">\r\n                    <input type=\"text\" \r\n                        className=\"form-control border border-secondary\" \r\n                        placeholder=\"Search\"\r\n                        value={input}\r\n                        onChange={(e)=>{setInput(e.target.value)}}\r\n                    />\r\n                    <button onClick={()=>{handleSearch()}} className=\"btn btn-primary ml-2\">Search</button>\r\n                </div>\r\n                <button onClick={()=>{setShow(true)}} className=\"btn btn-primary\">Add Contact</button>\r\n            </div>\r\n          \r\n            <div className=\"col-sm-12\">\r\n                <ContactTable data={contactList}/>\r\n            </div>\r\n            <AddContactModal title={\"Add Contact\"} show={show} handleClose={handleClose} handleSubmit={handleSubmit}/>\r\n            \r\n                 \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        data:state.contacts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        handleSave:(data)=>{dispatch(Add(data))},\r\n        handleUpdate:(data)=>{dispatch(UpdateContact(data))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactsList);"]},"metadata":{},"sourceType":"module"}